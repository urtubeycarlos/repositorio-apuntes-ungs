{"version":3,"sources":["services/careersService.js","services/notesService.js","components/Logo.jsx","components/Loading.jsx","views/Login.jsx","services/loginService.js","components/CareerSelect.jsx","components/AssignatureSelect.jsx","components/Search.jsx","components/Upload.jsx","views/Home.jsx","components/Note.jsx","views/Results.jsx","App.jsx","serviceWorker.js","index.js","config.js","services/RESTClient.js","services/assignaturesService.js"],"names":["restclient","RESTClient","getAllCareers","fetch","config","serverURI","currentApiVersion","then","response","json","getCareer","careerId","get","getAllNotes","getNoteByAssignaure","assignatureId","assignatureid","Logo","Row","className","alt","src","Loading","Spinner","animation","variant","Login","props","Container","Jumbotron","pos","FormData","append","position","Error","url","console","log","method","data","loginIn","isLogged","window","location","href","Component","require","CareerSelect","state","careers","isLoading","setState","Careers","catch","err","this","Autocomplete","id","options","onChange","event","newValue","getOptionLabel","option","Name","renderInput","params","TextField","fullWidth","label","placeholder","InputProps","endAdornment","Fragment","CircularProgress","color","size","getAssignatureByCareer","AssignatureSelect","assignatures","disabled","prevProps","prevState","carrerId","Assignatures","Search","search","career","Id","assignature","setCareer","bind","newCareer","newAssignature","Button","onClick","Upload","filesSelected","length","map","file","name","IconButton","component","deleteFile","htmlFor","filteredFiles","Array","from","filter","element","renderLabel","handleFiles","files","type","upLoad","Home","a11yProps","index","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","width","TabPanel","children","value","other","Typography","role","hidden","aria-labelledby","Box","p","useState","tabIndex","setTabIndex","useTheme","classes","AppBar","Tabs","indicatorColor","textColor","aria-label","Tab","axis","direction","dir","Note","fa_extension","extensionToFontAwesome","Card","style","Body","Col","sm","Title","filename","extension","Text","description","extensions","word","excel","slide","text","video","audio","compressed","pdf","book","imgs","code","fas","includes","Results","results","searchParams","getParams","Notes","URLSearchParams","param","App","history","browserHistory","path","Boolean","hostname","match","document","addEventListener","ReactDOM","render","cordovaWork","getElementById","navigator","serviceWorker","ready","registration","unregister","axios","apiURI","apiUri","endpoint","filters","urlEndpoint","getFiltersUrl","_isAMomentObject","toISOString","result","key","undefined","push","parseFilterValue","join","getAllAssignatures","getAssignature","careerid"],"mappings":"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","file":"static/js/main.06ec5d3f.chunk.js","sourcesContent":["import config from \"./../config\";\r\nimport RESTClient from './RESTClient';\r\nconst restclient = new RESTClient();\r\n\r\n\r\n/* export const getAllCareers = () => restclient.get('career'); */\r\n/* export const getAllCareers = function(){\r\n    console.warn(\"Obteniendo las carreras\");\r\n    console.warn(config.serverURI);\r\n    let url = `${config.serverURI}/api/${config.currentApiVersion}/career`\r\n    return fetch(url, {\r\n        method: 'GET',\r\n        mode: 'cors'\r\n    }).then( response => console.log(response.json()) );\r\n} */\r\n/* export const getCareer = function(careerId){\r\n    let url = `${config.serverURI}/api/${config.currentApiVersion}/career?careerid=${careerId}`\r\n    fetch(url).then( response => response.json() );\r\n} */\r\n\r\nexport const getAllCareers = () => {\r\n    return fetch(`${config.serverURI}/api/${config.currentApiVersion}/career`)\r\n        .then( response => response.json() )\r\n}\r\nexport const getCareer = (careerId) => restclient.get('career', careerId);\r\n","import RESTClient from './RESTClient';\r\nconst restclient = new RESTClient();\r\n\r\nexport const getAllNotes = () => restclient.get('note');\r\nexport const getNoteByAssignaure = (assignatureId) => restclient.get('note', null, { assignatureid: assignatureId });\r\n","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport './styles/logo.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <Row className=\"justify-content-center\">\r\n            <img alt=\"\" src=\"./logo.png\"></img>\r\n        </Row>);\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <Row className=\"justify-content-center\">\r\n            <Spinner animation=\"border\" variant=\"primary\"/>\r\n        </Row>);\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport Logo from '../components/Logo.jsx';\r\nimport Loading from '../components/Loading.jsx';\r\nimport { Container, Jumbotron, Row, Spinner } from 'react-bootstrap';\r\nimport { loginIn } from '../services/loginService';\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n\r\n    render(){\r\n            return (\r\n                <Container>\r\n                    <Logo />\r\n                    <Jumbotron>\r\n                        <Row className=\"justify-content-center\">\r\n                            <h5>Detectando ubicación...</h5>\r\n                        </Row>\r\n                        <Loading />\r\n                    </Jumbotron>\r\n                </Container>\r\n            )\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        let pos = new FormData();\r\n        pos.append('lat', 50);\r\n        pos.append('lon', 60);\r\n        loginIn(pos).then(loginIn => {\r\n            if( loginIn.isLogged )\r\n                window.location.href = \"/home\";\r\n        });\r\n        \r\n    }\r\n\r\n//     componentDidMount(){\r\n\r\n//         var self = this;\r\n//         var options = {\r\n//             enableHighAccuracy: true,\r\n//             maximumAge: 3600000,\r\n//         }\r\n        \r\n//         navigator.geolocation.getCurrentPosition(onSuccess, onError, options)\r\n\r\n//         function onSuccess(position) {\r\n//             $.support.cors = true\r\n//             $.ajax(\"http://localhost/login.php\")\r\n//                 .then(function(json){\r\n//                      if( json )\r\n//                         window.location.href = \"home\"\r\n//                 });\r\n//         };\r\n      \r\n//         function onError(error) {\r\n//             navigator.geolocation.getCurrentPosition(onSuccess, onError, options)\r\n//         }\r\n\r\n//     }\r\n\r\n\r\n}","import config from './../config';\r\n\r\nexport const loginIn = position => {\r\n    if( !(position instanceof FormData) )\r\n        throw new Error('position must be a instance of FormData');\r\n    let url = `${config.serverURI}/login.php`;\r\n    console.log(url)\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        data: position\r\n    }).then( response => response.json() );\r\n} \r\n    \r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { getAllCareers } = require('../services/careersService');\r\n\r\nclass CareerSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      careers: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllCareers()\r\n      .then(response => {\r\n        this.setState({\r\n          careers: response.data.Careers,\r\n          isLoading: false,\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      \r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { careers, isLoading } = this.state;\r\n    return(\r\n      <Autocomplete\r\n        id=\"career-select\"\r\n        className=\"career-select\"\r\n        options={careers}\r\n        onChange={(event, newValue) => this.props.onChange && this.props.onChange(event, newValue)}\r\n        getOptionLabel={option => option.Name}\r\n        renderInput={params => (\r\n          <TextField fullWidth\r\n            {...params}\r\n            label=\"Carrera\"\r\n            placeholder=\"Seleccione una carrera\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <React.Fragment>\r\n                  {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                  {params.InputProps.endAdornment}\r\n                </React.Fragment>\r\n              ),\r\n            }}\r\n          />\r\n        )}  \r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default CareerSelect;","import React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { getAssignatureByCareer } = require('../services/assignaturesService');\r\n\r\nclass AssignatureSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      assignatures: [],\r\n      isLoading: false,\r\n      disabled: true,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.careerId !== this.props.careerId && this.props.careerId) {\r\n      this.setState({\r\n        disabled: false,\r\n        isLoading: true,\r\n      }, () => {\r\n        getAssignatureByCareer(this.props.carrerId)\r\n          .then(response => {\r\n            this.setState({\r\n              assignatures: response.data.Assignatures,\r\n              isLoading: false,\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            //handle somehow this error\r\n          })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { assignatures, isLoading, disabled } = this.state;\r\n    return(\r\n      <Autocomplete\r\n        disabled={disabled}\r\n        id=\"assignature-select\"\r\n        className=\"assignature-select\"\r\n        options={assignatures}\r\n        onChange={(event, newValue) => this.props.onChange && this.props.onChange(event, newValue)}\r\n        getOptionLabel={option => option.Name}\r\n        renderInput={params => (\r\n          <TextField fullWidth\r\n            {...params}\r\n            label=\"Materia\"\r\n            placeholder=\"Seleccione una materia\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <React.Fragment>\r\n                  {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                  {params.InputProps.endAdornment}\r\n                </React.Fragment>\r\n              ),\r\n            }}\r\n          />\r\n        )} \r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default AssignatureSelect;","import './styles/search.css';\r\nimport React, { Component } from 'react';\r\n\r\nimport { Row, Form } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CareerSelect from './CareerSelect';\r\nimport AssignatureSelect from './AssignatureSelect';\r\n\r\nconst { getAssignatureByCareer } = require('../services/assignaturesService');\r\n\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        career: null,\r\n        assignature: null,\r\n        isLoading: null,\r\n      }\r\n\r\n      this.setCareer = this.setCareer.bind(this);\r\n    }\r\n\r\n    setCareer(newCareer) {\r\n      this.setState({\r\n        career: newCareer,\r\n        isLoading: true,\r\n      });\r\n    }\r\n\r\n    search = () => {\r\n      window.location.href = `/results?career=${this.state.career.Id}&assignature=${this.state.assignature.Id}`\r\n    }\r\n\r\n    render() {\r\n      const { career, isLoading, assignature } = this.state;\r\n      return(\r\n        <div className=\"search-form-container\">\r\n          <div className=\"form-selects-row\">\r\n            <CareerSelect \r\n              onChange={(event, newCareer) => this.setState({ career: newCareer, isLoading: true })} />\r\n            <AssignatureSelect\r\n              careerId={career ? career.Id : null}\r\n              onChange={(event, newAssignature) => this.setState({ assignature: newAssignature })} />\r\n          </div>\r\n          <div className=\"from-action-container\">\r\n            <div className=\"float-right\">\r\n              <Button \r\n                disabled={!career || !assignature} \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={() => this.search()}>Buscar</Button>\r\n            </div>  \r\n          </div>\r\n        </div>);\r\n          \r\n    } \r\n}\r\n\r\nexport default Search;","import './styles/upload.css';\r\nimport React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ReactFileReader from 'react-file-reader';\r\n\r\nimport CareerSelect from '../components/CareerSelect';\r\nimport AssignatureSelect from '../components/AssignatureSelect';\r\n\r\n\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filesSelected: [],\r\n      career: null,\r\n    }\r\n\r\n  }\r\n\r\n  renderLabel() {\r\n    const { filesSelected } = this.state;\r\n    if (!filesSelected || !filesSelected.length) {\r\n      return(\r\n        <React.Fragment>\r\n          <label htmlFor=\"real-apunte-btn\">Seleccione archivo</label>\r\n          <br/>\r\n        </React.Fragment>)\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {filesSelected.map(file =>\r\n          <React.Fragment>\r\n            <label>{file.name}</label>\r\n            <IconButton \r\n              color=\"primary\"  \r\n              component=\"span\"\r\n              onClick={() => this.deleteFile(file)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            <br />\r\n          </React.Fragment> )}\r\n        <label>Selecciona otro archivo</label>\r\n      </React.Fragment>)\r\n  }\r\n\r\n  deleteFile(file) {\r\n    const { filesSelected } = this.state;\r\n    const copiedFiles = Array.from(filesSelected);\r\n    const filteredFiles = copiedFiles.filter(element => element.name != file.name);\r\n    \r\n    this.setState({\r\n      filesSelected: filteredFiles,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { career } = this.state;\r\n    return(\r\n      <div className=\"upload-form-container\">\r\n        <div className=\"form-selects-row\">\r\n          <CareerSelect \r\n            onChange={(event, newCareer) => this.setState({ career: newCareer, isLoading: true })} />\r\n          <AssignatureSelect\r\n            careerId={career ? career.Id : null}\r\n            onChange={(event, newAssignature) => this.setState({ assignature: newAssignature })} />\r\n        </div>\r\n        <div className=\"from-action-container\">\r\n          { this.renderLabel() }\r\n          <ReactFileReader handleFiles={(files) => this.setState(prevState => ({ filesSelected: [...files, ...prevState.filesSelected] }))}>\r\n            <Button type=\"file\" variant=\"contained\" color=\"primary\">Buscar..</Button>\r\n          </ReactFileReader>\r\n          <br/>\r\n          <div className=\"float-right\">\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => this.upLoad()}>Subir</Button>\r\n          </div>      \r\n        </div>\r\n      </div>);\r\n    }\r\n}\r\n\r\nexport default Upload;","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Logo from '../components/Logo';\r\nimport Search from '../components/Search';\r\nimport Upload from '../components/Upload';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { useState } from 'react';\r\n\r\nconst Home = () => {\r\n    /**\r\n     * Methods\r\n    */\r\n    const a11yProps = (index) => {\r\n        return {\r\n          id: `full-width-tab-${index}`,\r\n          'aria-controls': `full-width-tabpanel-${index}`,\r\n        };\r\n    }\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n          backgroundColor: theme.palette.background.paper,\r\n          width: '100%',\r\n        },\r\n      }));\r\n\r\n    /**\r\n     * Component - TODO: Refactor to an atomic and independent component\r\n    */\r\n    const TabPanel = (props) => {\r\n        const { children, value, index, ...other } = props;\r\n      \r\n        return (\r\n          <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n          >\r\n            <Box p={3}>{children}</Box>\r\n          </Typography>\r\n        );\r\n      }\r\n\r\n    /**\r\n     * States and setStates\r\n    */\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    /**\r\n     * Variables\r\n    */\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Logo />\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        value={tabIndex}\r\n                        onChange={(event, index) => setTabIndex(index)}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                    >\r\n                        <Tab label=\"Buscar Apuntes\" {...a11yProps(0)} />\r\n                        <Tab label=\"Subir Apuntes\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <SwipeableViews\r\n                    className={classes.root}\r\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                    index={tabIndex}\r\n                >\r\n                    <TabPanel value={tabIndex} index={0} dir={theme.direction}><Search /></TabPanel>\r\n                    <TabPanel value={tabIndex} index={1} dir={theme.direction}><Upload /></TabPanel>\r\n                </SwipeableViews>\r\n            </Container>\r\n        </div>)\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Note extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            fa_extension: \"fa fa-file-o\"\r\n        }\r\n\r\n        this.extensionToFontAwesome = {\r\n            \"pdf\": \"fa fa-file-pdf-o\"\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <Row className=\"justify-content-center\">\r\n                <Card style={{\"width\": \"75%\"}}>\r\n                    <Card.Body>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col sm={\"auto\"} className=\"my-auto\">\r\n                                    <i className={this.state.fa_extension} style={{\"fontSize\":\"5em\"}}></i>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Card.Title>{`${this.props.filename}${this.props.extension}`}</Card.Title>\r\n                                    <Card.Text>\r\n                                        {this.props.description}\r\n                                    </Card.Text>\r\n                                    <Button color=\"secondary\" href={this.props.url}>Descargar</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let extensions = {\r\n            word : ['.doc', '.docx', '.odt'],\r\n            excel : ['.xls', '.xlsx', '.csv', '.xps'],\r\n            slide : ['.ppt', '.pptx', '.pps', '.ppsx', '.odp'],\r\n            text : ['.txt', '.md', '.markdown'],\r\n            video : ['.mp4', '.avi', '.3gp', '.wmv'],\r\n            audio : ['.mp3', '.m4a', '.ogg', '.aac', '.3gpp'],\r\n            compressed : ['.zip', '.rar'],\r\n            pdf : ['.pdf'],\r\n            book : ['.epub'],\r\n            imgs : ['.jpg', '.jpeg', '.jfif', '.png', '.webp', '.gif', '.bmp', '.dib', '.tif', '.tiff', '.svg'],\r\n            code : ['.py', '.java', '.jar', '.c', '.cpp', '.go', '.asm', '.js', '.html', '.css', '.sass']\r\n        }\r\n\r\n        let fas = {\r\n            word : 'fa fa-file-word-o',\r\n            excel: 'fa fa-file-excel-o',\r\n            slide: 'fa fa-file-powerpoint-o',\r\n            text: 'fa fa-file-text-o',\r\n            video: 'fa fa-file-video-o',\r\n            audio: 'fa fa-file-audio-o',\r\n            compressed: 'fa fa-file-zip-o',\r\n            pdf: 'fa fa-file-pdf-o',\r\n            book: 'fa fa-book',\r\n            imgs: 'fa fa-file-picture-o',\r\n            code: 'fa fa-file-code-o'\r\n        }\r\n\r\n        for(const type in extensions)\r\n            if( extensions[type].includes( this.props.extension ) )\r\n                this.setState({fa_extension: fas[type]})\r\n        \r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Container, Row, Jumbotron } from \"react-bootstrap\";\r\nimport Loading from \"../components/Loading.jsx\";\r\nimport Logo from '../components/Logo';\r\nimport Note from '../components/Note';\r\n\r\nconst { getNoteByAssignaure } = require('../services/notesService');\r\n\r\nclass Results extends Component {\r\n  constructor(props){\r\n    super(props)\r\n      this.state = {\r\n        results: null\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const searchParams = this.getParams();\r\n    debugger\r\n    if (searchParams.assignature) {\r\n      getNoteByAssignaure(searchParams.assignature)\r\n        .then(response => {\r\n          debugger\r\n          this.setState({\r\n            results: response.data.Notes,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          debugger\r\n          //handle somehow this error\r\n        });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    const params = {};\r\n    const searchParams = new URLSearchParams(window.location.search)\r\n\r\n    for (let param of searchParams) {\r\n      params[param[0]] = param[1];\r\n    }\r\n\r\n    return params\r\n  }\r\n\r\n  render() {\r\n    const { results } = this.state;\r\n    return !results ?\r\n      <Container>\r\n        <Logo />\r\n        <Jumbotron>\r\n          <Row className=\"justify-content-center\">\r\n            <h5>Buscando apuntes</h5>\r\n          </Row>\r\n          <Loading />\r\n          <Note \r\n            filename={'complejidad_computacional'} \r\n            extension={'.java'} \r\n            url={\"https://www.youtube.com/\"} \r\n            description={\"Soy una describicion.\"}/>   \r\n        </Jumbotron>\r\n      </Container> :\r\n      <Container>\r\n        <Logo />\r\n        <Jumbotron>\r\n          <Row className=\"justify-content-center\">\r\n            <h5>Apuntes encontrados</h5>\r\n          </Row>\r\n        </Jumbotron>\r\n      </Container>\r\n  }\r\n}\r\n\r\nexport default Results;\r\n\r\n    // componentWillMount(){\r\n    //     var self = this;\r\n    //     $.ajax(\"http://localhost/api/1.0/note\").\r\n    //                 then(function(response){\r\n    //                     response['Notes'] = response['Notes'].map(function(note){\r\n    //                         console.log(note)\r\n    //                         return (\r\n    //                             <Note filename={`${note.Filename}.${note.Extension}`} description={note.Description} url={note.Url}/>\r\n    //                         )\r\n    //                     })\r\n    //                     self.setState({'results': response['Notes']});\r\n    //                 })\r\n        \r\n    // }","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Login from './views/Login.jsx'\r\nimport Home from './views/Home.jsx'\r\nimport Results from './views/Results.jsx'\r\nimport { Router, Route, browserHistory } from \"react-router\";\r\n\r\nconst App = () => (\r\n    <Router history = {browserHistory}>\r\n      <Route path = \"/\" component = {Login}/>\r\n        <Route path = \"/home\" component = {Home}/>\r\n        <Route path = \"/results\" component = {Results}/>\r\n      </Router>);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'cordova_script';\r\n\r\ndocument.addEventListener('deviceready', () => {\r\n\r\n    ReactDOM.render(\r\n        <App cordovaWork={true}/>,\r\n        document.getElementById('app')\r\n    );\r\n}, false);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","var config = {\r\n    serverURI: 'https://repositorio-apuntes-ungs.000webhostapp.com',\r\n    currentApiVersion: '1.0'\r\n}\r\n\r\nexport default config;","import config from './../config'\r\n\r\nconst axios = require('axios');\r\n\r\nexport default class RESTClient {\r\n  apiUri = '';\r\n  constructor(apiURI = `${config.serverURI}/api/${config.currentApiVersion}`) {\r\n    this.apiURI = apiURI;\r\n  }\r\n\r\n  get(endpoint, id = null, filters = {}) {\r\n    const urlEndpoint = id ? \r\n    `${this.apiURI}/${endpoint}/${id}${this.getFiltersUrl(filters)}` : \r\n    `${this.apiURI}/${endpoint}${this.getFiltersUrl(filters)}`\r\n\r\n    return axios.get(urlEndpoint);\r\n  }\r\n\r\n  parseFilterValue( value ) {\r\n\r\n    if (value._isAMomentObject){\r\n      return value.toISOString();\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  getFiltersUrl(filters) {\r\n    let result = [];\r\n\r\n    for (var key in filters) {\r\n      if (filters[key] === undefined) { // what is this case for?\r\n        result.push(key);\r\n      }\r\n      else {\r\n        result.push(`${key}=${this.parseFilterValue(filters[key])}`);\r\n      }\r\n    }\r\n    return `?${result.join('&')}`;\r\n  }\r\n}","import RESTClient from './RESTClient';\r\nconst restclient = new RESTClient();\r\n\r\nexport const getAllAssignatures = () => restclient.get('assignature');\r\nexport const getAssignature = (assignatureId) => restclient.get('assignature', assignatureId);\r\nexport const getAssignatureByCareer = (careerId) => restclient.get('assignature', null, { careerid: careerId });\r\n"],"sourceRoot":""}