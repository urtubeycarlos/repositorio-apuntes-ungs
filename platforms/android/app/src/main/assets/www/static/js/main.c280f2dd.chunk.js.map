{"version":3,"sources":["components/Logo.jsx","components/Loading.jsx","components/Login.jsx","components/Search.jsx","components/Upload.jsx","components/Home.jsx","components/Note.jsx","components/Results.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Logo","props","Row","className","src","Component","Loading","Spinner","animation","variant","Login","Container","Jumbotron","options","enableHighAccuracy","maximumAge","onSuccess","position","$","support","cors","ajax","then","json","window","location","href","navigator","geolocation","getCurrentPosition","onError","error","Search","Form","Group","htmlFor","type","name","id","placeholder","event","files","target","this","setState","fileSelected","tabs","Upload","state","Home","onPreChange","index","onPostChange","console","log","onReactive","renderTabs","activeIndex","tabbar","content","tab","label","icon","Note","fa_extension","extensionToFontAwesome","Card","style","Body","Col","sm","class","Title","filename","extension","Text","description","Button","url","extensions","word","excel","slide","text","video","audio","compressed","pdf","book","imgs","code","fas","includes","Results","results","self","response","map","note","Filename","Extension","Description","Url","App","history","browserHistory","path","component","Boolean","hostname","match","document","addEventListener","ReactDOM","render","cordovaWork","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c280f2dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Row } from 'react-bootstrap';\nimport './Logo.css'\n\nexport default class Logo extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        return (\n            <Row className=\"justify-content-center\">\n                <img src=\"./logo.png\"></img>\n            </Row>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\n\nexport default class Loading extends Component {\n\n    constructor(props){\n        super(props)\n    }\n    \n    render(){\n        return(\n            <Row className=\"justify-content-center\">\n                <Spinner animation=\"border\" variant=\"primary\"/>\n            </Row>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { Controller } from 'react-controller'\nimport $ from 'jquery';\nimport Logo from './Logo.jsx';\nimport Loading from './Loading.jsx';\nimport { Container, Jumbotron, Row, Spinner } from 'react-bootstrap';\n\nexport default class Login extends Component {\n\n    constructor(props){\n        super(props)\n\n    }\n\n    render(){\n            return (\n                <Container>\n                    <Logo />\n                    <Jumbotron>\n                        <Row className=\"justify-content-center\">\n                            <h5>Detectando ubicaci√≥n...</h5>\n                        </Row>\n                        <Loading />\n                    </Jumbotron>\n                </Container>\n            )\n\n    }\n\n    componentDidMount(){\n\n        var self = this;\n        var options = {\n            enableHighAccuracy: true,\n            maximumAge: 3600000,\n        }\n        \n        navigator.geolocation.getCurrentPosition(onSuccess, onError, options)\n\n        function onSuccess(position) {\n            $.support.cors = true\n            $.ajax(\"http://localhost/login.php\")\n                .then(function(json){\n                     if( json )\n                        window.location.href = \"home\"\n                });\n        };\n      \n        function onError(error) {\n            navigator.geolocation.getCurrentPosition(onSuccess, onError, options)\n        }\n\n    }\n\n}\n\nclass Position {\n    constructor(lat, lon){\n        this.lat = lat;\n        this.lon = lon;\n    }\n}","import React, { Component } from 'react';\nimport { Container, Row, Form } from 'react-bootstrap';\nimport $ from 'jquery';\nimport 'jquery-ui/themes/base/core.css';\nimport 'jquery-ui/themes/base/theme.css';\nimport 'jquery-ui/themes/base/tabs.css';\nimport 'jquery-ui/ui/core';\nimport 'jquery-ui/ui/widgets/tabs';\nimport Logo from './Logo';\n\nexport default class Search extends Component {\n    \n    constructor(props){\n        super(props);\n\n    }\n\n    render(){\n        return (\n            <Row className=\"justify-content-center\">\n                <Form>\n                <Form.Group>\n                <label htmlFor=\"career\">Carrera</label>\n                <input type=\"text\" className=\"form-control\" name=\"career\" id=\"career\" placeholder=\"Seleccione Carrera...\" />\n                </Form.Group>\n                <Form.Group>\n                <label htmlFor=\"assignature\">Materia</label>\n                <input type=\"text\" className=\"form-control\" name=\"assignature\" id=\"assignature\" placeholder=\"Seleccione Materia...\" />\n                </Form.Group>\n                <div className=\"float-right\">\n                    <button type=\"submit\" className=\"next btn btn-info mt-2\" id=\"confimDatosPedido\">Buscar !</button>\n                </div>  \n            </Form>\n            </Row>\n\n        )\n    }\n    \n      manejarCambio(event){\n        let files = event.target.files;\n        this.setState({fileSelected: `Seleccionado: ${files[0].name}`});\n      }\n      \n      componentDidMount(){\n          $(\"#tabs\").tabs();\n      }\n}","import React, { Component } from 'react';\nimport { Row, Form } from \"react-bootstrap\";\n\nexport default class Upload extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            fileSelected: \"Buscar...\"\n        }\n\n    }\n\n    render(){\n        return(\n            <Row className=\"justify-content-center\">\n                <Form>\n                    <Form.Group>\n                        <label htmlFor=\"career\">Carrera</label>\n                        <input type=\"text\" className=\"form-control\" name=\"career\" id=\"career\" placeholder=\"Seleccione Carrera...\" />\n                    </Form.Group>\n                    <Form.Group>\n                        <label htmlFor=\"assignature\">Materia</label>\n                        <input type=\"text\" className=\"form-control\" name=\"assignature\" id=\"assignature\" placeholder=\"Seleccione Materia...\" />\n                    </Form.Group>\n                    <Form.Group className=\"mt-8\">\n                        <label htmlFor=\"real-apunte-btn\">Seleccione archivo</label><br/>\n                        <label htmlFor=\"apunte\" id=\"real-apunte-btn\" className=\"btn btn-primary\">{this.state.fileSelected}</label><br/>\n                        <input type=\"file\" name=\"apunte\" id=\"apunte\"/>\n                    </Form.Group>\n                    <div className=\"float-right\">\n                        <button type=\"submit\" className=\"next btn btn-info mt-2\" id=\"confimDatosPedido\">Subir !</button>\n                    </div>  \n                </Form>\n            </Row>\n        )\n    }\n\n    manejarCambio(event){\n        let files = event.target.files;\n    }\n\n}","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Tabbar, Tab } from 'react-onsenui' \nimport Logo from './Logo';\nimport Search from './Search';\nimport Upload from './Upload';\n\nexport default class Home extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        return(\n            <Container>\n                <Logo />\n                <div id=\"tabs\">\n                    {/* <ul>\n                        <li><a href=\"#tabs-1\">Buscar Apuntes</a></li>\n                        <li><a href=\"#tabs-2\">Subir Apuntes</a></li>\n                    </ul> */}\n                    <Tabbar\n                        onPreChange={({index}) => this.setState(index)}\n                        onPostChange={() => console.log('postChange')}\n                        onReactive={() => console.log('postChange')}\n                        position='bottom'\n                        index={this.state.index}\n                        renderTabs={(activeIndex, tabbar) => [\n                            {\n                                content: <Search />,\n                                tab: <Tab label=\"Buscar apuntes\" icon=\"md-home\" />\n                            },\n                            {\n                                content: <Upload />,\n                                tab: <Tab label=\"Subir apuntes\" icon=\"md-settings\" />\n                            }]\n                        }\n                    />\n                    {/* <div id=\"tabs-1\">\n                        <Search />\n                    </div>\n                    <div id=\"tabs-2\">\n                        <Upload />\n                    </div> */}\n                </div>\n            </Container>\n        )\n    }\n\n\n}","import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\n\nexport default class Note extends Component {\n    \n    constructor(props){\n        super(props)\n\n        this.state = {\n            fa_extension: \"fa fa-file-o\"\n        }\n\n        this.extensionToFontAwesome = {\n            \"pdf\": \"fa fa-file-pdf-o\"\n        }\n    }\n\n    render(){\n        return (\n            <Row className=\"justify-content-center\">\n                <Card style={{\"width\": \"75%\"}}>\n                    <Card.Body>\n                        <Container>\n                            <Row>\n                                <Col sm={\"auto\"} className=\"my-auto\">\n                                    <i class={this.state.fa_extension} style={{\"font-size\":\"5em\"}}></i>\n                                </Col>\n                                <Col>\n                                    <Card.Title>{`${this.props.filename}${this.props.extension}`}</Card.Title>\n                                    <Card.Text>\n                                        {this.props.description}\n                                    </Card.Text>\n                                    <Button variant=\"info\" href={this.props.url}>Descargar</Button>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                </Card>\n            </Row>\n        )\n    }\n\n    componentDidMount(){\n\n        let extensions = {\n            word : ['.doc', '.docx', '.odt'],\n            excel : ['.xls', '.xlsx', '.csv', '.xps'],\n            slide : ['.ppt', '.pptx', '.pps', '.ppsx', '.odp'],\n            text : ['.txt', '.md', '.markdown'],\n            video : ['.mp4', '.avi', '.3gp', '.wmv'],\n            audio : ['.mp3', '.m4a', '.ogg', '.aac', '.3gpp'],\n            compressed : ['.zip', '.rar'],\n            pdf : ['.pdf'],\n            book : ['.epub'],\n            imgs : ['.jpg', '.jpeg', '.jfif', '.png', '.webp', '.gif', '.bmp', '.dib', '.tif', '.tiff', '.svg'],\n            code : ['.py', '.java', '.jar', '.c', '.cpp', '.go', '.asm', '.js', '.html', '.css', '.sass']\n        }\n\n        let fas = {\n            word : 'fa fa-file-word-o',\n            excel: 'fa fa-file-excel-o',\n            slide: 'fa fa-file-powerpoint-o',\n            text: 'fa fa-file-text-o',\n            video: 'fa fa-file-video-o',\n            audio: 'fa fa-file-audio-o',\n            compressed: 'fa fa-file-zip-o',\n            pdf: 'fa fa-file-pdf-o',\n            book: 'fa fa-book',\n            imgs: 'fa fa-file-picture-o',\n            code: 'fa fa-file-code-o'\n        }\n\n        for(const type in extensions)\n            if( extensions[type].includes( this.props.extension ) )\n                this.setState({fa_extension: fas[type]})\n        \n    }\n\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport { Container, Row, Jumbotron } from \"react-bootstrap\";\nimport Loading from \"./Loading.jsx\";\nimport Logo from './Logo';\nimport Note from './Note';\n\nexport default class Results extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            results: null\n        }\n    }\n\n    render(){\n        if( !this.state.results ){\n            return (\n                <Container>\n                    <Logo></Logo>\n                    <Jumbotron>\n                        <Row className=\"justify-content-center\">\n                            <h5>Buscando apuntes</h5>\n                        </Row>\n                        <Loading />\n                        \n                        <Note filename={'complejidad_computacional'} extension={'.java'} url={\"https://www.youtube.com/\"} description={\"Soy una describicion Soy una describicion Soy una describicion Soy una describicion Soy una describicion\"}/>\n                        \n                        \n                    </Jumbotron>\n                    \n                </Container>\n            )\n        } else {\n            return (\n                <Container>\n                    <Logo></Logo>\n                    <Jumbotron>\n                        <Row className=\"justify-content-center\">\n                            <h5>Apuntes encontrados</h5>\n                        </Row>\n                    </Jumbotron>\n                </Container>\n\n               \n            )\n            \n        }\n        \n    }\n\n    componentWillMount(){\n        var self = this;\n        $.ajax(\"http://localhost/api/1.0/note\").\n                    then(function(response){\n                        response['Notes'] = response['Notes'].map(function(note){\n                            console.log(note)\n                            return (\n                                <Note filename={`${note.Filename}.${note.Extension}`} description={note.Description} url={note.Url}/>\n                            )\n                        })\n                        self.setState({'results': response['Notes']});\n                    })\n        \n    }\n\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './components/Login.jsx'\nimport Home from './components/Home.jsx'\nimport Results from './components/Results.jsx'\nimport { Router, Route, browserHistory } from \"react-router\";\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render(){\n    return (\n        <Router history = {browserHistory}>\n          <Route path = \"/\" component = {Login}/>\n          <Route path = \"/home\" component = {Home}/>\n          <Route path = \"/results\" component = {Results}/>\n        </Router>\n    );\n\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport 'cordova_script';\nimport Search from './components/Search.jsx';\n\ndocument.addEventListener('deviceready', () => {\n\n    ReactDOM.render(\n        <App cordovaWork={true}/>,\n        document.getElementById('app')\n    );\n}, false);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}